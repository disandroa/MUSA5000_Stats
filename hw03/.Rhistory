knitr::opts_chunk$set(echo = T, eval = T, warning = F, message = F)
# get rid of scientific notation
options(scipen = 999)
# set working directory
# setwd("~/Documents/GitHub/MUSA5000_Stats/hw03")
# load packages
library(tidyverse)
library(aod)
library(ggplot2)
library(rms)
library(gmodels)
library(nnet)
library(DAAG)
library(ROCR)
library(xtable)
library(kableExtra)
library(ggcorrplot)
mydata <- read.csv("data/Logistic Regression Data.csv")
#drinking_d dv
DRINKING_D.tab <- table(mydata$DRINKING_D)
prop.table(DRINKING_D.tab)
fatal_CrossT <- CrossTable(mydata$FATAL_OR_M, mydata$DRINKING_D, prop.r=FALSE,prop.chisq=FALSE, chisq=FALSE,prop.t=FALSE,
cell.layout=TRUE)
overturned_CrossT <- CrossTable(mydata$OVERTURNED, mydata$DRINKING_D,prop.r=FALSE,prop.chisq=FALSE, chisq=FALSE,prop.t=FALSE)
cell_phone_CrossT <- CrossTable(mydata$CELL_PHONE, mydata$DRINKING_D, prop.r=FALSE,prop.chisq=FALSE, chisq=FALSE,prop.t=FALSE)
speeding_CrossT <- CrossTable(mydata$SPEEDING, mydata$DRINKING_D, prop.r=FALSE,prop.chisq=FALSE, chisq=FALSE,prop.t=FALSE)
aggressive_CrossT <- CrossTable(mydata$AGGRESSIVE, mydata$DRINKING_D,prop.r=FALSE,prop.chisq=FALSE, chisq=FALSE,prop.t=FALSE)
driver1617_CrossT <- CrossTable(mydata$DRIVER1617, mydata$DRINKING_D, prop.r=FALSE,prop.chisq=FALSE, chisq=FALSE,prop.t=FALSE)
driver65plus_CrossT <- CrossTable(mydata$DRIVER65PLUS, mydata$DRINKING_D, prop.r=FALSE,prop.chisq=FALSE, chisq=FALSE,prop.t=FALSE)
crosstable1.df <- data.frame(var_name = c("FATAL_OR_M: Crash resulted in fatality or major injury",
"OVERTURNED: Crash involved an overturned vehicle",
"CELL_PHONE: Driver was using cell phone",
"SPEEDING: Crash involved speeding car",
"AGGRESSIVE: Crash involved aggressive driving",
"DRIVER1617: Crash involved at least one driver who was 16 or 17 years old",
"DRIVER65PLUS: Crash involved at least one driver who was at least 65 years old"
),
no_drinkN = c(fatal_CrossT[["t"]][,1][2],
overturned_CrossT[["t"]][,1][2], cell_phone_CrossT[["t"]][,1][2],speeding_CrossT[["t"]][,1][2],
aggressive_CrossT[["t"]][,1][2], driver1617_CrossT[["t"]][,1][2],driver65plus_CrossT[["t"]][,1][2]
),
no_drinkProp = c(fatal_CrossT[["prop.col"]][,1][2],
overturned_CrossT[["prop.col"]][,1][2], cell_phone_CrossT[["prop.col"]][,1][2],
speeding_CrossT[["prop.col"]][,1][2],
aggressive_CrossT[["prop.col"]][,1][2],
driver1617_CrossT[["prop.col"]][,1][2],driver65plus_CrossT[["prop.col"]][,1][2]),
y_drinkN = c(fatal_CrossT[["t"]][,2][2],
overturned_CrossT[["t"]][,2][2], cell_phone_CrossT[["t"]][,2][2],speeding_CrossT[["t"]][,2][2],
aggressive_CrossT[["t"]][,2][2], driver1617_CrossT[["t"]][,2][2],driver65plus_CrossT[["t"]][,2][2]
),
y_drinkProp = c(fatal_CrossT[["prop.col"]][,2][2],
overturned_CrossT[["prop.col"]][,2][2], cell_phone_CrossT[["prop.col"]][,2][2],
speeding_CrossT[["prop.col"]][,2][2],
aggressive_CrossT[["prop.col"]][,2][2],
driver1617_CrossT[["prop.col"]][,2][2],driver65plus_CrossT[["prop.col"]][,2][2]),
total = c(fatal_CrossT[["t"]][,2][2]+fatal_CrossT[["t"]][,1][2],
overturned_CrossT[["t"]][,2][2]+overturned_CrossT[["t"]][,1][2],
cell_phone_CrossT[["t"]][,2][2]+cell_phone_CrossT[["t"]][,1][2],
speeding_CrossT[["t"]][,2][2]+speeding_CrossT[["t"]][,1][2],
aggressive_CrossT[["t"]][,2][2]+aggressive_CrossT[["t"]][,1][2],
driver1617_CrossT[["t"]][,2][2]+driver1617_CrossT[["t"]][,1][2],
driver65plus_CrossT[["t"]][,2][2]+driver65plus_CrossT[["t"]][,1][2]))
kbl(crosstable1.df) %>%
kable_styling(bootstrap_options = "striped", full_width = F)
chisqfatal_CrossT <- CrossTable(mydata$FATAL_OR_M, mydata$DRINKING_D, prop.r=FALSE,prop.chisq=FALSE, chisq=TRUE,prop.t=FALSE)
chisqoverturned_CrossT <- CrossTable(mydata$OVERTURNED, mydata$DRINKING_D,prop.r=FALSE,prop.chisq=FALSE, chisq=TRUE,prop.t=FALSE)
chisqcell_phone_CrossT <- CrossTable(mydata$CELL_PHONE, mydata$DRINKING_D, prop.r=FALSE,prop.chisq=FALSE, chisq=TRUE,prop.t=FALSE)
chisqspeeding_CrossT <- CrossTable(mydata$SPEEDING, mydata$DRINKING_D, prop.r=FALSE,prop.chisq=FALSE, chisq=TRUE,prop.t=FALSE)
chisqaggressive_CrossT <- CrossTable(mydata$AGGRESSIVE, mydata$DRINKING_D,prop.r=FALSE,prop.chisq=FALSE, chisq=TRUE,prop.t=FALSE)
chisqdriver1617_CrossT <- CrossTable(mydata$DRIVER1617, mydata$DRINKING_D, prop.r=FALSE,prop.chisq=FALSE, chisq=TRUE,prop.t=FALSE)
chisqdriver65plus_CrossT <- CrossTable(mydata$DRIVER65PLUS, mydata$DRINKING_D, prop.r=FALSE,prop.chisq=TRUE, chisq=TRUE,prop.t=FALSE)
crosstable1.df %>% mutate(
chisq.pval = c(chisqfatal_CrossT[["chisq"]][["p.value"]],
chisqoverturned_CrossT[["chisq"]][["p.value"]],
chisqcell_phone_CrossT[["chisq"]][["p.value"]],
chisqspeeding_CrossT[["chisq"]][["p.value"]],
chisqaggressive_CrossT[["chisq"]][["p.value"]],
chisqdriver1617_CrossT[["chisq"]][["p.value"]],
chisqdriver65plus_CrossT[["chisq"]][["p.value"]]))
kbl(crosstable1.df) %>%
kable_styling(bootstrap_options = "striped", full_width = F)
tapply(mydata$PCTBACHMOR,
mydata$DRINKING_D, mean)
tapply(mydata$PCTBACHMOR, mydata$DRINKING_D, sd)
tapply(mydata$MEDHHINC,
mydata$DRINKING_D, mean)
tapply(mydata$MEDHHINC, mydata$DRINKING_D, sd)
t.test(mydata$PCTBACHMOR~mydata$DRINKING_D)
t.test(mydata$MEDHHINC~mydata$DRINKING_D)
cormat <- mydata %>%
dplyr::select(FATAL_OR_M:DRIVER65PLUS,PCTBACHMOR,MEDHHINC) %>%
cor()
cor_plot <- ggcorrplot(cormat,
method = "circle",
type = "lower",
lab = TRUE,
lab_size = 3,
colors = c("#451077FF", "white", "#F1605DFF"),
outline.color = "white",
title = "Correlation Matrix of Predictors",
legend.title = "Correlation") +
theme_minimal() +
labs(x = "",
y = "") +
theme(axis.text.x = element_text(angle = 20))
cor_plot
mylogit <- glm(DRINKING_D ~ FATAL_OR_M+OVERTURNED+CELL_PHONE+SPEEDING+AGGRESSIVE+DRIVER1617+
DRIVER65PLUS+PCTBACHMOR+MEDHHINC, data = mydata, family = "binomial")
summary(mylogit)
confint.default(mylogit)  #95% confidence intervals
exp(cbind(OR = coef(mylogit), confint(mylogit)))
setwd("~/Documents/GitHub/MUSA5000_Stats/hw03")
logit_output <- summary(mylogit)
logitcoeffs <- logit_output$coefficients
confint.default(mylogit)  #95% confidence intervals
or_ci <- exp(cbind(OR = coef(mylogit), confint(mylogit)))
final_logit <- cbind(logitcoeffs, or_ci)
final_logit
fitted = mylogit$fitted
cutoff_list = c()
sensitivity_list = c()
specificity_list = c()
find_ss = function(cutoff_values) {
cutoff_list = c()
sensitivity_list = c()
specificity_list = c()
for(i in seq_along(cutoff_values)){
cutoff = cutoff_values[i]
fit.binary = (fitted>=cutoff)
ct_binary = CrossTable(fit.binary, df$DRINKING_D, prop.r=FALSE, prop.t=FALSE, prop.chisq=FALSE)
false_neg = ct_binary$t[,2][1]
true_pos = ct_binary$t[,2][2]
false_pos = ct_binary$t[,1][1]
true_neg = ct_binary$t[,1][2]
sensitivity = round(true_pos/(true_pos+false_neg),2)
specificity = round(true_neg/(true_neg+false_pos),2)
sensitivity_list = c(sensitivity_list,sensitivity)
specificity_list = c(specificity_list,specificity)
cutoff_list = c(cutoff_list,cutoff)
}
table = data.frame(cutoff=cutoff_list,sensitivity=sensitivity_list,specificity=specificity_list)
return(table)
}
cutoff_value = c(0.02,0.03,0.05,0.07,0.08,0.09,0.10,0.15,0.20,0.50)
table_test = find_ss(cutoff_value)
fitted = mylogit$fitted
cutoff_list = c()
sensitivity_list = c()
specificity_list = c()
find_ss = function(cutoff_values) {
cutoff_list = c()
sensitivity_list = c()
specificity_list = c()
for(i in seq_along(cutoff_values)){
cutoff = cutoff_values[i]
fit.binary = (fitted>=cutoff)
ct_binary = CrossTable(fit.binary, mydata$DRINKING_D, prop.r=FALSE, prop.t=FALSE, prop.chisq=FALSE)
false_neg = ct_binary$t[,2][1]
true_pos = ct_binary$t[,2][2]
false_pos = ct_binary$t[,1][1]
true_neg = ct_binary$t[,1][2]
sensitivity = round(true_pos/(true_pos+false_neg),2)
specificity = round(true_neg/(true_neg+false_pos),2)
sensitivity_list = c(sensitivity_list,sensitivity)
specificity_list = c(specificity_list,specificity)
cutoff_list = c(cutoff_list,cutoff)
}
table = data.frame(cutoff=cutoff_list,sensitivity=sensitivity_list,specificity=specificity_list)
return(table)
}
cutoff_value = c(0.02,0.03,0.05,0.07,0.08,0.09,0.10,0.15,0.20,0.50)
table_test = find_ss(cutoff_value)
print(table_test)
fitted = mylogit$fitted
cutoff_list = c()
sensitivity_list = c()
specificity_list = c()
find_ss = function(cutoff_values) {
cutoff_list = c()
sensitivity_list = c()
specificity_list = c()
for(i in seq_along(cutoff_values)){
cutoff = cutoff_values[i]
fit.binary = (fitted>=cutoff)
ct_binary = CrossTable(fit.binary, mydata$DRINKING_D, prop.r=FALSE, prop.t=FALSE, prop.chisq=FALSE)
false_neg = ct_binary$t[,2][1]
true_pos = ct_binary$t[,2][2]
false_pos = ct_binary$t[,1][1]
true_neg = ct_binary$t[,1][2]
sensitivity = round(true_pos/(true_pos+false_neg),2)
specificity = round(true_neg/(true_neg+false_pos),2)
misclassification = round((false_pos + false_neg)/(false_pos + false_neg + true_pos + true_neg),2)
sensitivity_list = c(sensitivity_list,sensitivity)
specificity_list = c(specificity_list,specificity)
misclassification_list = c(misclassification_list, misclassification)
cutoff_list = c(cutoff_list,cutoff)
}
table = data.frame(cutoff=cutoff_list,sensitivity=sensitivity_list,specificity=specificity_list,
misclassification=misclassification_list)
return(table)
}
cutoff_value = c(0.02,0.03,0.05,0.07,0.08,0.09,0.10,0.15,0.20,0.50)
table_test = find_ss(cutoff_value)
fitted = mylogit$fitted
cutoff_list = c()
sensitivity_list = c()
specificity_list = c()
misclassification_list = c()
find_ss = function(cutoff_values) {
cutoff_list = c()
sensitivity_list = c()
specificity_list = c()
for(i in seq_along(cutoff_values)){
cutoff = cutoff_values[i]
fit.binary = (fitted>=cutoff)
ct_binary = CrossTable(fit.binary, mydata$DRINKING_D, prop.r=FALSE, prop.t=FALSE, prop.chisq=FALSE)
false_neg = ct_binary$t[,2][1]
true_pos = ct_binary$t[,2][2]
false_pos = ct_binary$t[,1][1]
true_neg = ct_binary$t[,1][2]
sensitivity = round(true_pos/(true_pos+false_neg),2)
specificity = round(true_neg/(true_neg+false_pos),2)
misclassification = round((false_pos + false_neg)/(false_pos + false_neg + true_pos + true_neg),2)
sensitivity_list = c(sensitivity_list,sensitivity)
specificity_list = c(specificity_list,specificity)
misclassification_list = c(misclassification_list, misclassification)
cutoff_list = c(cutoff_list,cutoff)
}
table = data.frame(cutoff=cutoff_list,sensitivity=sensitivity_list,specificity=specificity_list,
misclassification=misclassification_list)
return(table)
}
cutoff_value = c(0.02,0.03,0.05,0.07,0.08,0.09,0.10,0.15,0.20,0.50)
table_test = find_ss(cutoff_value)
print(table_test)
fit <- mylogit$fitted
a <- cbind(mydata$DRINKING_D, fit)
colnames(a) <- c("labels","predictions")
head(a)
roc <- as.data.frame(a)
pred <- prediction(roc$predictions, roc$labels)
fit <- mylogit$fitted
a <- cbind(mydata$DRINKING_D, fit)
colnames(a) <- c("labels","predictions")
roc <- as.data.frame(a)
pred <- prediction(roc$predictions, roc$labels)
roc.perf = performance(pred, measure = "tpr", x.measure="fpr")
plot(roc.perf)
abline(a=0,b=1)
abline(a=0,b=1, col="darkorange3")
fit <- mylogit$fitted
a <- cbind(mydata$DRINKING_D, fit)
colnames(a) <- c("labels","predictions")
roc <- as.data.frame(a)
pred <- prediction(roc$predictions, roc$labels)
roc.perf = performance(pred, measure = "tpr", x.measure="fpr")
plot(roc.perf)
abline(a=0,b=1, col="darkorange3")
auc.perf = performance(pred, measure ="auc")
auc.perf@y.values
mylogit2 <- glm(DRINKING_D ~ FATAL_OR_M+OVERTURNED+CELL_PHONE+SPEEDING+AGGRESSIVE+DRIVER1617+
DRIVER65PLUS+PCTBACHMOR+MEDHHINC, data = mydata, family = "binomial")
summary(mylogit2)
mylogit2 <- glm(DRINKING_D ~ FATAL_OR_M+OVERTURNED+CELL_PHONE+SPEEDING+AGGRESSIVE+DRIVER1617+
DRIVER65PLUS, data = mydata, family = "binomial")
summary(mylogit2)
logit_output2 <- summary(mylogit2)
logitcoeffs2 <- logit_output2$coefficients
confint.default(mylogit2)  #95% confidence intervals
or_ci2 <- exp(cbind(OR = coef(mylogit2), confint(mylogit2)))
final_logit2 <- cbind(logitcoeffs2, or_ci2)
final_logit2
library(stargazer)
stargazer(mylogit, mylogit2)
stargazer(mylogit, mylogit2, type="text")
crosstable1.df %>% mutate(
chisq.pval = c(chisqfatal_CrossT[["chisq"]][["p.value"]],
chisqoverturned_CrossT[["chisq"]][["p.value"]],
chisqcell_phone_CrossT[["chisq"]][["p.value"]],
chisqspeeding_CrossT[["chisq"]][["p.value"]],
chisqaggressive_CrossT[["chisq"]][["p.value"]],
chisqdriver1617_CrossT[["chisq"]][["p.value"]],
chisqdriver65plus_CrossT[["chisq"]][["p.value"]])) %>%
kbl(crosstable1.df) %>%
kable_styling(bootstrap_options = "striped", full_width = F)
crosstable1.df %>% mutate(
chisq.pval = c(chisqfatal_CrossT[["chisq"]][["p.value"]],
chisqoverturned_CrossT[["chisq"]][["p.value"]],
chisqcell_phone_CrossT[["chisq"]][["p.value"]],
chisqspeeding_CrossT[["chisq"]][["p.value"]],
chisqaggressive_CrossT[["chisq"]][["p.value"]],
chisqdriver1617_CrossT[["chisq"]][["p.value"]],
chisqdriver65plus_CrossT[["chisq"]][["p.value"]])) %>%
kbl() %>%
kable_styling(bootstrap_options = "striped", full_width = F)
View(mydata)
